#!/bin/bash

# üöÄ Nanny Match - Restart All Services (Local Mode - No Docker)
echo "========================================="
echo "   Nanny Match Full Restart (Local)"
echo "========================================="

# –í–∏–∑–Ω–∞—á–∞—î–º–æ –±–∞–∑–æ–≤—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
BASE_DIR="$(dirname "$0")"
cd "$BASE_DIR"

# –ó–ê–í–ñ–î–ò –æ—á–∏—â—É—î–º–æ —Å—Ç–∞—Ä—ñ –ø—Ä–æ—Ü–µ—Å–∏ —Å–ø–æ—á–∞—Ç–∫—É
echo "üßπ –û—á–∏—â–µ–Ω–Ω—è –í–°–Ü–• —Å—Ç–∞—Ä–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤..."
pkill -f "npm.*dev" 2>/dev/null || true
pkill -f "vite" 2>/dev/null || true  
pkill -f "uvicorn" 2>/dev/null || true
pkill -f "node.*vite" 2>/dev/null || true
pkill -f "python.*uvicorn" 2>/dev/null || true
pkill -f "redis-server" 2>/dev/null || true
sleep 2

# –ü—Ä–∏–º—É—Å–æ–≤–æ –æ—á–∏—â—É—î–º–æ –ø–æ—Ä—Ç–∏ (macOS —Å—É–º—ñ—Å–Ω–∏–π)
lsof -ti :8080 | xargs kill -9 2>/dev/null || true
lsof -ti :8000 | xargs kill -9 2>/dev/null || true
lsof -ti :6379 | xargs kill -9 2>/dev/null || true
sleep 1

echo "‚úÖ –í—Å—ñ —Å—Ç–∞—Ä—ñ –ø—Ä–æ—Ü–µ—Å–∏ –∑—É–ø–∏–Ω–µ–Ω—ñ"

# –°–ø—Ä–æ–±—É—î–º–æ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ Redis –ª–æ–∫–∞–ª—å–Ω–æ
echo "üî¥ –ó–∞–ø—É—Å–∫ Redis –ª–æ–∫–∞–ª—å–Ω–æ..."
if command -v redis-server &> /dev/null; then
    redis-server --daemonize yes --port 6379
    echo "‚úÖ Redis –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É 6379"
else
    echo "‚ö†Ô∏è Redis –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏:"
    echo "   macOS: brew install redis"
    echo "   Ubuntu: sudo apt-get install redis-server"
    echo ""
    echo "üîß –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –±–µ–∑ Redis (SMS —Ñ—É–Ω–∫—Ü—ñ—ó –º–æ–∂—É—Ç—å –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏)..."
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–º—ñ–Ω–Ω—É –¥–ª—è —Ä–æ–±–æ—Ç–∏ –±–µ–∑ Redis
    export SMS_TEST_MODE=true
    export OTP_DEV_MODE=true
    export OTP_DEV_CODE=1111
fi

# –ó–∞–ø—É—Å–∫–∞—î–º–æ Backend –ª–æ–∫–∞–ª—å–Ω–æ
echo "üêç –ó–∞–ø—É—Å–∫ Backend..."
cd nanny-match-backend

# –ê–∫—Ç–∏–≤—É—î–º–æ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ —è–∫—â–æ –≤–æ–Ω–æ —î
if [ -f "venv/bin/activate" ]; then
    source venv/bin/activate
elif [ -f ".venv/bin/activate" ]; then
    source .venv/bin/activate
fi

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
export DATABASE_URL="postgresql://app:app@localhost:5432/app"
export ENVIRONMENT="development"
export DEBUG=true
export HOST=0.0.0.0
export PORT=8000
export JWT_SECRET_KEY="dev-secret-key-change-in-production-12345"
export SMS_TEST_MODE=true
export OTP_DEV_MODE=true
export OTP_DEV_CODE=1111

# –î–æ–¥–∞—î–º–æ –∑–º—ñ–Ω–Ω—ñ –¥–ª—è S3 storage –∑ env.local —è–∫—â–æ –≤–æ–Ω–∏ —î
if [ -f "env.local" ]; then
    echo "üì¶ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å S3 –∑ env.local..."
    export $(grep "^EXTERNAL_STORAGE" env.local | xargs)
fi

# –ó–∞–ø—É—Å–∫–∞—î–º–æ backend —É —Ñ–æ–Ω—ñ
python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload &
BACKEND_PID=$!
cd ..
sleep 5

# –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ backend –±—É–¥–µ –≥–æ—Ç–æ–≤–∏–π
echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ backend..."
for i in {1..15}; do
    if curl -s http://localhost:8000/docs > /dev/null 2>&1; then
        echo "‚úÖ Backend –≥–æ—Ç–æ–≤–∏–π!"
        break
    fi
    echo "   –°–ø—Ä–æ–±–∞ $i/15..."
    sleep 2
done

# –ó–∞–ø—É—Å–∫–∞—î–º–æ frontend
echo "üåê –ó–∞–ø—É—Å–∫ Frontend..."
cd nanny-match-ukraine

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
if [ ! -d "node_modules" ]; then
    echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π frontend..."
    npm install
fi

# –ó–∞–ø—É—Å–∫–∞—î–º–æ frontend
npm run dev -- --port 8080 --host 0.0.0.0 &
FRONTEND_PID=$!
cd ..
sleep 5

# –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ frontend –±—É–¥–µ –≥–æ—Ç–æ–≤–∏–π
echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ frontend..."
for i in {1..10}; do
    if curl -s http://localhost:8080 > /dev/null 2>&1; then
        echo "‚úÖ Frontend –≥–æ—Ç–æ–≤–∏–π!"
        break
    fi
    echo "   –°–ø—Ä–æ–±–∞ $i/10..."
    sleep 2
done

echo ""
echo "========================================="
echo "üéâ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!"
echo "========================================="
echo "   Backend:  http://localhost:8000"
echo "   Frontend: http://localhost:8080"
echo "   API Docs: http://localhost:8000/docs"
echo ""
echo "üìå –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:"
echo "   SMS: –¢–µ—Å—Ç–æ–≤–∏–π —Ä–µ–∂–∏–º (OTP –∫–æ–¥: 1111)"
if command -v redis-server &> /dev/null; then
    echo "   Redis: –ó–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É 6379"
else
    echo "   Redis: –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ (–ø—Ä–∞—Ü—é—î –≤ –æ–±–º–µ–∂–µ–Ω–æ–º—É —Ä–µ–∂–∏–º—ñ)"
fi
echo "   S3 Storage: Hetzner Object Storage"
echo ""
echo "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –∑—É–ø–∏–Ω–∫–∏ –≤—Å—ñ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤"
echo "========================================="

# Function to cleanup on exit
cleanup() {
    echo ""
    echo "üßπ –ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
    kill $BACKEND_PID 2>/dev/null || true
    kill $FRONTEND_PID 2>/dev/null || true
    pkill -f redis-server 2>/dev/null || true
    echo "‚úÖ –í—Å—ñ —Å–µ—Ä–≤—ñ—Å–∏ –∑—É–ø–∏–Ω–µ–Ω—ñ"
    exit 0
}

trap cleanup SIGINT SIGTERM

# –û—á—ñ–∫—É—î–º–æ
wait $BACKEND_PID $FRONTEND_PID
