#!/usr/bin/env python3
"""
–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä—ñ
"""
import requests
import json

def diagnose_production():
    """–î—ñ–∞–≥–Ω–æ—Å—Ç—É—î –ø—Ä–æ–±–ª–µ–º–∏ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—ñ"""
    
    BASE_URL = "https://nany.datavertex.me"
    
    print("üîç –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ï–†–ê")
    print(f"üåê URL: {BASE_URL}")
    print("=" * 50)
    
    # 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–æ–≤–∏—Ö –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤
    print("\n1Ô∏è‚É£ –ü–ï–†–ï–í–Ü–†–ö–ê –ë–ê–ó–û–í–ò–• –ï–ù–î–ü–û–Ü–ù–¢–Ü–í:")
    
    basic_endpoints = [
        ("/", "–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞"),
        ("/docs", "API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è"),
        ("/health", "Health check"),
        ("/api/v1/health", "API health check")
    ]
    
    for endpoint, description in basic_endpoints:
        try:
            response = requests.get(f"{BASE_URL}{endpoint}", timeout=5)
            status = "‚úÖ" if response.status_code < 400 else "‚ùå"
            print(f"   {status} {endpoint} ({description}): {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå {endpoint}: –ü–û–ú–ò–õ–ö–ê - {e}")
    
    # 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ auth –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤
    print("\n2Ô∏è‚É£ –ü–ï–†–ï–í–Ü–†–ö–ê AUTH –ï–ù–î–ü–û–Ü–ù–¢–Ü–í:")
    
    auth_endpoints = [
        ("/api/v1/auth/send-otp", "POST", {"phone": "+380501234567"}),
        ("/api/v1/auth/me", "GET", None),
    ]
    
    for endpoint, method, body in auth_endpoints:
        try:
            if method == "POST":
                response = requests.post(f"{BASE_URL}{endpoint}", json=body, timeout=10)
            else:
                response = requests.get(f"{BASE_URL}{endpoint}", timeout=10)
            
            status = "‚úÖ" if response.status_code < 500 else "‚ùå"
            print(f"   {status} {method} {endpoint}: {response.status_code}")
            
            if response.status_code >= 500:
                print(f"      üî• SERVER ERROR: {response.text[:100]}...")
                
        except Exception as e:
            print(f"   ‚ùå {method} {endpoint}: –ü–û–ú–ò–õ–ö–ê - {e}")
    
    # 3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ search –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
    print("\n3Ô∏è‚É£ –ü–ï–†–ï–í–Ü–†–ö–ê SEARCH –ï–ù–î–ü–û–Ü–ù–¢–Ü–í (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó):")
    
    search_endpoints = [
        "/api/v1/search/nannies/complete",
        "/api/v1/search/parents/complete",
        "/api/v1/search/nannies",
        "/api/v1/search/parents"
    ]
    
    for endpoint in search_endpoints:
        try:
            response = requests.get(f"{BASE_URL}{endpoint}?limit=1", timeout=10)
            
            if response.status_code == 401 or response.status_code == 403:
                print(f"   ‚úÖ {endpoint}: {response.status_code} (–æ—á—ñ–∫—É–≤–∞–Ω–æ - –ø–æ—Ç—Ä—ñ–±–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è)")
            elif response.status_code >= 500:
                print(f"   ‚ùå {endpoint}: {response.status_code} - SERVER ERROR!")
                print(f"      üî• {response.text[:100]}...")
            else:
                print(f"   ‚ö†Ô∏è {endpoint}: {response.status_code} (–Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–æ)")
                
        except Exception as e:
            print(f"   ‚ùå {endpoint}: –ü–û–ú–ò–õ–ö–ê - {e}")
    
    # 4. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ—Å—Ç–∏—Ö –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤
    print("\n4Ô∏è‚É£ –ü–ï–†–ï–í–Ü–†–ö–ê –ü–†–û–°–¢–ò–• –ï–ù–î–ü–û–Ü–ù–¢–Ü–í:")
    
    simple_endpoints = [
        "/api/v1/simple/my-likes",
        "/api/v1/counters/dashboard/complete"
    ]
    
    for endpoint in simple_endpoints:
        try:
            response = requests.get(f"{BASE_URL}{endpoint}", timeout=10)
            
            if response.status_code == 401 or response.status_code == 403:
                print(f"   ‚úÖ {endpoint}: {response.status_code} (–æ—á—ñ–∫—É–≤–∞–Ω–æ)")
            elif response.status_code >= 500:
                print(f"   ‚ùå {endpoint}: {response.status_code} - SERVER ERROR!")
            else:
                print(f"   ‚ö†Ô∏è {endpoint}: {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ùå {endpoint}: –ü–û–ú–ò–õ–ö–ê - {e}")
    
    # 5. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ OpenAPI —Å—Ö–µ–º–∏
    print("\n5Ô∏è‚É£ –ê–ù–ê–õ–Ü–ó API –°–•–ï–ú–ò:")
    
    try:
        response = requests.get(f"{BASE_URL}/openapi.json", timeout=10)
        
        if response.status_code == 200:
            print("   ‚úÖ OpenAPI —Å—Ö–µ–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
            
            openapi_data = response.json()
            paths = openapi_data.get("paths", {})
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –Ω–∞—à—ñ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏ –≤ —Å—Ö–µ–º—ñ
            target_paths = [
                "/api/v1/search/nannies/complete",
                "/api/v1/search/parents/complete",
                "/api/v1/auth/send-otp",
                "/api/v1/auth/verify-otp"
            ]
            
            print("   üìã –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤ –≤ —Å—Ö–µ–º—ñ:")
            for path in target_paths:
                if path in paths:
                    print(f"      ‚úÖ {path}")
                else:
                    print(f"      ‚ùå {path} - –í–Ü–î–°–£–¢–ù–Ü–ô!")
                    
        else:
            print(f"   ‚ùå OpenAPI —Å—Ö–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ö–µ–º–∏: {e}")
    
    print("\n" + "=" * 50)
    print("üìä –í–ò–°–ù–û–í–ö–ò:")
    print("1. –Ø–∫—â–æ –≤—Å—ñ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏ –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å 500 - –ø—Ä–æ–±–ª–µ–º–∞ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö –∞–±–æ —Å–µ—Ä–≤–µ—Ä–æ–º")
    print("2. –Ø–∫—â–æ —Ç—ñ–ª—å–∫–∏ –¥–µ—è–∫—ñ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏ 500 - –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫–æ–¥—ñ")
    print("3. –Ø–∫—â–æ 401/403 - —Å–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î, –ø—Ä–æ–±–ª–µ–º–∞ –∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é")
    print("4. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó")

if __name__ == "__main__":
    diagnose_production()
