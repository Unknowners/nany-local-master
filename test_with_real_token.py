#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É –∑ —Ä–µ–∞–ª—å–Ω–∏–º —Ç–æ–∫–µ–Ω–æ–º
"""
import requests
import json

def test_with_token():
    """–¢–µ—Å—Ç—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç –∑ —Ä–µ–∞–ª—å–Ω–∏–º —Ç–æ–∫–µ–Ω–æ–º"""
    
    BASE_URL = "https://nany.datavertex.me"
    
    print("üîê –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑ —Ä–µ–∞–ª—å–Ω–∏–º —Ç–æ–∫–µ–Ω–æ–º")
    print("–°–ø–æ—á–∞—Ç–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ –ª–æ–≥—ñ–Ω...")
    print()
    
    # –¢–µ—Å—Ç—É—î–º–æ –ª–æ–≥—ñ–Ω –µ–Ω–¥–ø–æ—ñ–Ω—Ç
    print("1Ô∏è‚É£ –¢–µ—Å—Ç –ª–æ–≥—ñ–Ω –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É:")
    
    # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É
    test_phone = "+380501234567"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π —Ç–µ—Å—Ç–æ–≤–∏–π –Ω–æ–º–µ—Ä
    
    try:
        # –ö—Ä–æ–∫ 1: –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ OTP
        otp_response = requests.post(
            f"{BASE_URL}/api/v1/auth/send-otp",
            json={"phone": test_phone},
            timeout=10
        )
        
        print(f"   üì± OTP –∑–∞–ø–∏—Ç: {otp_response.status_code}")
        print(f"   üìÑ –í—ñ–¥–ø–æ–≤—ñ–¥—å: {otp_response.text[:200]}...")
        
        if otp_response.status_code == 200:
            otp_data = otp_response.json()
            print("   ‚úÖ OTP –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
            
            # –£ DEV —Ä–µ–∂–∏–º—ñ OTP –∫–æ–¥ –º–æ–∂–µ –±—É—Ç–∏ –≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
            if "OTP –∫–æ–¥:" in otp_data.get("message", ""):
                otp_code = otp_data["message"].split("OTP –∫–æ–¥: ")[1].split(" ")[0]
                print(f"   üîë DEV OTP –∫–æ–¥: {otp_code}")
                
                # –ö—Ä–æ–∫ 2: –í–µ—Ä–∏—Ñ—ñ–∫—É—î–º–æ OTP
                verify_response = requests.post(
                    f"{BASE_URL}/api/v1/auth/verify-otp",
                    json={
                        "phone": test_phone,
                        "otp_code": otp_code,
                        "otp_hash": otp_data.get("otp_hash", "")
                    },
                    timeout=10
                )
                
                print(f"   ‚úÖ OTP –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è: {verify_response.status_code}")
                print(f"   üìÑ –í—ñ–¥–ø–æ–≤—ñ–¥—å: {verify_response.text[:200]}...")
                
                if verify_response.status_code == 200:
                    verify_data = verify_response.json()
                    
                    if verify_data.get("verified"):
                        print("   üéâ OTP –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
                        
                        # –ö—Ä–æ–∫ 3: –õ–æ–≥—ñ–Ω
                        login_response = requests.post(
                            f"{BASE_URL}/api/v1/auth/login",
                            json={"phone": test_phone},
                            timeout=10
                        )
                        
                        print(f"   üîê –õ–æ–≥—ñ–Ω: {login_response.status_code}")
                        
                        if login_response.status_code == 200:
                            login_data = login_response.json()
                            access_token = login_data.get("data", {}).get("access_token")
                            
                            if access_token:
                                print(f"   üéØ –û—Ç—Ä–∏–º–∞–Ω–æ —Ç–æ–∫–µ–Ω: {access_token[:20]}...")
                                
                                # –¢–µ–ø–µ—Ä —Ç–µ—Å—Ç—É—î–º–æ search –µ–Ω–¥–ø–æ—ñ–Ω—Ç –∑ —Ä–µ–∞–ª—å–Ω–∏–º —Ç–æ–∫–µ–Ω–æ–º
                                print()
                                print("2Ô∏è‚É£ –¢–µ—Å—Ç search –µ–Ω–¥–ø–æ—ñ–Ω—Ç—É –∑ —Ä–µ–∞–ª—å–Ω–∏–º —Ç–æ–∫–µ–Ω–æ–º:")
                                
                                headers = {"Authorization": f"Bearer {access_token}"}
                                search_response = requests.get(
                                    f"{BASE_URL}/api/v1/search/nannies/complete?limit=5",
                                    headers=headers,
                                    timeout=10
                                )
                                
                                print(f"   üìä Status: {search_response.status_code}")
                                
                                if search_response.status_code == 200:
                                    print("   ‚úÖ SUCCESS! –ï–Ω–¥–ø–æ—ñ–Ω—Ç –ø—Ä–∞—Ü—é—î!")
                                    data = search_response.json()
                                    print(f"   üìä –ó–Ω–∞–π–¥–µ–Ω–æ –Ω—è–Ω—å: {len(data.get('data', []))}")
                                    print(f"   üìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: {list(data.keys())}")
                                elif search_response.status_code == 500:
                                    print("   ‚ùå –ü–û–ú–ò–õ–ö–ê 500 - –ø—Ä–æ–±–ª–µ–º–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ!")
                                    print(f"   üìÑ –ü–æ–≤–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {search_response.text}")
                                else:
                                    print(f"   ‚ö†Ô∏è –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∏–π —Å—Ç–∞—Ç—É—Å: {search_response.status_code}")
                                    print(f"   üìÑ –í—ñ–¥–ø–æ–≤—ñ–¥—å: {search_response.text}")
                            else:
                                print("   ‚ùå –¢–æ–∫–µ–Ω –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–æ")
                        else:
                            print(f"   ‚ùå –õ–æ–≥—ñ–Ω –Ω–µ –≤–¥–∞–≤—Å—è: {login_response.text}")
                    else:
                        print("   ‚ùå OTP –Ω–µ –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ")
                else:
                    print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó: {verify_response.text}")
            else:
                print("   ‚ö†Ô∏è OTP –∫–æ–¥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ (–º–æ–∂–ª–∏–≤–æ production —Ä–µ–∂–∏–º)")
        else:
            print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ OTP: {otp_response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    
    print()
    print("3Ô∏è‚É£ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Ç–µ—Å—Ç - –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ /api/v1/auth/me:")
    
    # –Ø–∫—â–æ —É –≤–∞—Å —î –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —Ç–æ–∫–µ–Ω, –º–æ–∂–µ—Ç–µ –π–æ–≥–æ —Ç—É—Ç –≤—Å—Ç–∞–≤–∏—Ç–∏ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    saved_token = None  # –í—Å—Ç–∞–≤—Ç–µ —Å—é–¥–∏ —Ç–æ–∫–µ–Ω —è–∫—â–æ —î
    
    if saved_token:
        try:
            headers = {"Authorization": f"Bearer {saved_token}"}
            me_response = requests.get(
                f"{BASE_URL}/api/v1/auth/me",
                headers=headers,
                timeout=10
            )
            
            print(f"   üìä /auth/me Status: {me_response.status_code}")
            
            if me_response.status_code == 200:
                print("   ‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª—ñ–¥–Ω–∏–π!")
                
                # –¢–µ—Å—Ç—É—î–º–æ search –∑ —Ü–∏–º —Ç–æ–∫–µ–Ω–æ–º
                search_response = requests.get(
                    f"{BASE_URL}/api/v1/search/nannies/complete?limit=5",
                    headers=headers,
                    timeout=10
                )
                
                print(f"   üìä Search Status: {search_response.status_code}")
                if search_response.status_code == 500:
                    print("   ‚ùå –ü–û–ú–ò–õ–ö–ê 500 –Ω–∞ search –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ!")
                    print(f"   üìÑ –í—ñ–¥–ø–æ–≤—ñ–¥—å: {search_response.text}")
            else:
                print(f"   ‚ùå –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π: {me_response.text}")
                
        except Exception as e:
            print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    else:
        print("   ‚ö†Ô∏è –ù–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω—É –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è")

if __name__ == "__main__":
    test_with_token()
