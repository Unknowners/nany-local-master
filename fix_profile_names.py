#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç–∞–≤–ª—è–Ω–Ω—è —ñ–º–µ–Ω –ø—Ä–æ—Ñ–∞–π–ª–∞–º –∑ null –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏
"""
import psycopg2
import random
from datetime import datetime

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ø—Ä–æ–¥–∞–∫—à–Ω –ë–î
LOCAL_DB_CONFIG = {
    "host": "localhost", 
    "port": "5432", 
    "database": "app",
    "user": "app",
    "password": "app"
}

# –°–ø–∏—Å–∫–∏ —ñ–º–µ–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
FIRST_NAMES_MALE = [
    "–°–µ—Ä–≥—ñ–π", "–û–ª–µ–∫—Å–∞–Ω–¥—Ä", "–ê–Ω–¥—Ä—ñ–π", "–í–æ–ª–æ–¥–∏–º–∏—Ä", "–î–º–∏—Ç—Ä–æ", "–ú–∞–∫—Å–∏–º", 
    "–í—ñ—Ç–∞–ª—ñ–π", "–†–æ–º–∞–Ω", "–ë–æ–≥–¥–∞–Ω", "–¢–∞—Ä–∞—Å", "–Ü–≥–æ—Ä", "–ü–∞–≤–ª–æ", "–û–ª–µ–≥"
]

FIRST_NAMES_FEMALE = [
    "–û–ª–µ–Ω–∞", "–°–≤—ñ—Ç–ª–∞–Ω–∞", "–ù–∞—Ç–∞–ª—ñ—è", "–û–ª—å–≥–∞", "–¢–µ—Ç—è–Ω–∞", "–ú–∞—Ä—ñ—è", 
    "–ö–∞—Ç–µ—Ä–∏–Ω–∞", "–ê–Ω–Ω–∞", "–Æ–ª—ñ—è", "–Ü—Ä–∏–Ω–∞", "–í—ñ–∫—Ç–æ—Ä–∏—è", "–õ—é–¥–º–∏–ª–∞"
]

LAST_NAMES = [
    "–ü–µ—Ç—Ä–µ–Ω–∫–æ", "–Ü–≤–∞–Ω–µ–Ω–∫–æ", "–ö–æ–≤–∞–ª–µ–Ω–∫–æ", "–ë–æ–π–∫–æ", "–ú–µ–ª—å–Ω–∏–∫", "–ì—Ä—ñ—â–µ–Ω–∫–æ",
    "–¢–∫–∞—á–µ–Ω–∫–æ", "–ö—Ä–∞–≤—á–µ–Ω–∫–æ", "–ú–æ—Ä–æ–∑–µ–Ω–∫–æ", "–ü–æ–ª—Ç–∞–≤—á–µ–Ω–∫–æ", "–°–∞–≤—á–µ–Ω–∫–æ", "–õ–∏—Å–µ–Ω–∫–æ"
]

def generate_name():
    """–ì–µ–Ω–µ—Ä—É—î –≤–∏–ø–∞–¥–∫–æ–≤–µ —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ"""
    # –í–∏–ø–∞–¥–∫–æ–≤–æ –≤–∏–±–∏—Ä–∞—î–º–æ —á–æ–ª–æ–≤—ñ—á–µ —á–∏ –∂—ñ–Ω–æ—á–µ —ñ–º'—è
    if random.choice([True, False]):
        first_name = random.choice(FIRST_NAMES_FEMALE)
    else:
        first_name = random.choice(FIRST_NAMES_MALE)
    
    last_name = random.choice(LAST_NAMES)
    return first_name, last_name

def main():
    try:
        # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î
        print("üîå –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—å –¥–æ –ª–æ–∫–∞–ª—å–Ω–æ—ó –ë–î...")
        conn = psycopg2.connect(**LOCAL_DB_CONFIG)
        cursor = conn.cursor()
        
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø—Ä–æ—Ñ–∞–π–ª–∏ –∑ null —ñ–º–µ–Ω–∞–º–∏
        print("üîç –®—É–∫–∞—î–º–æ –ø—Ä–æ—Ñ–∞–π–ª–∏ –∑ NULL —ñ–º–µ–Ω–∞–º–∏...")
        cursor.execute("""
            SELECT user_id, first_name, last_name, role, created_at
            FROM profiles 
            WHERE first_name IS NULL OR last_name IS NULL OR first_name = '' OR last_name = ''
            ORDER BY created_at DESC
        """)
        
        null_profiles = cursor.fetchall()
        
        if not null_profiles:
            print("‚úÖ –í—Å—ñ –ø—Ä–æ—Ñ–∞–π–ª–∏ –≤–∂–µ –º–∞—é—Ç—å —ñ–º–µ–Ω–∞!")
            return
            
        print(f"üìä –ó–Ω–∞–π–¥–µ–Ω–æ {len(null_profiles)} –ø—Ä–æ—Ñ–∞–π–ª—ñ–≤ –∑ –≤—ñ–¥—Å—É—Ç–Ω—ñ–º–∏ —ñ–º–µ–Ω–∞–º–∏")
        
        counter = 1
        updated_count = 0
        
        for user_id, first_name, last_name, role, created_at in null_profiles:
            print(f"\nüîß #{counter}: {user_id} - '{first_name}' '{last_name}' ({role})")
            
            # –ì–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–≤—ñ —ñ–º–µ–Ω–∞
            new_first_name, new_last_name = generate_name()
            
            # –î–æ–¥–∞—î–º–æ –Ω–æ–º–µ—Ä –¥–ª—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ—Å—Ç—ñ
            new_first_name = f"{new_first_name} {counter:02d}"
            
            print(f"   ‚Üí –ù–æ–≤—ñ —ñ–º–µ–Ω–∞: '{new_first_name}' '{new_last_name}'")
            
            # –û–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–æ—Ñ–∞–π–ª
            cursor.execute("""
                UPDATE profiles 
                SET first_name = %s, last_name = %s, updated_at = NOW()
                WHERE user_id = %s
            """, (new_first_name, new_last_name, user_id))
            
            updated_count += 1
            counter += 1
            
        # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ –∑–º—ñ–Ω–∏
        conn.commit()
        print(f"\n‚úÖ –ì–û–¢–û–í–û! –û–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –ø—Ä–æ—Ñ–∞–π–ª—ñ–≤")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("""
            SELECT COUNT(*) FROM profiles 
            WHERE first_name IS NULL OR last_name IS NULL OR first_name = '' OR last_name = ''
        """)
        remaining_null = cursor.fetchone()[0]
        
        print(f"üìä –ó–∞–ª–∏—à–∏–ª–æ—Å—å –ø—Ä–æ—Ñ–∞–π–ª—ñ–≤ –∑ NULL: {remaining_null}")
        
        cursor.close()
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –ü–û–ú–ò–õ–ö–ê: {e}")
        if 'conn' in locals():
            conn.rollback()
            conn.close()

if __name__ == "__main__":
    print("üöÄ –ü–æ—á–∞—Ç–æ–∫ –æ–±—Ä–æ–±–∫–∏ NULL –ø—Ä–æ—Ñ–∞–π–ª—ñ–≤...")
    main()
    print("üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–æ!")