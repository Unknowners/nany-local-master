#!/bin/bash

# üöÄ Nanny Match - Restart All Services
echo "========================================="
echo "   Nanny Match Full Restart"
echo "========================================="

# –ó–ê–í–ñ–î–ò –æ—á–∏—â—É—î–º–æ —Å—Ç–∞—Ä—ñ –ø—Ä–æ—Ü–µ—Å–∏ —Å–ø–æ—á–∞—Ç–∫—É
echo "üßπ –û—á–∏—â–µ–Ω–Ω—è –í–°–Ü–• —Å—Ç–∞—Ä–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤..."
pkill -f "npm.*dev" 2>/dev/null || true
pkill -f "vite" 2>/dev/null || true  
pkill -f "uvicorn" 2>/dev/null || true
pkill -f "node.*vite" 2>/dev/null || true
pkill -f "python.*uvicorn" 2>/dev/null || true
sleep 3

# –ü—Ä–∏–º—É—Å–æ–≤–æ –æ—á–∏—â—É—î–º–æ –ø–æ—Ä—Ç–∏
lsof -ti :8080 | xargs -r kill -9 2>/dev/null || true
lsof -ti :8000 | xargs -r kill -9 2>/dev/null || true
sleep 2

echo "‚úÖ –í—Å—ñ —Å—Ç–∞—Ä—ñ –ø—Ä–æ—Ü–µ—Å–∏ –∑—É–ø–∏–Ω–µ–Ω—ñ"

# –ó—É–ø–∏–Ω—è—î–º–æ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏
echo "üê≥ –ó—É–ø–∏–Ω–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
cd nanny-match-backend
docker-compose -f docker-compose.dev.yml down 2>/dev/null || true
sleep 3

# –ó–∞–ø—É—Å–∫–∞—î–º–æ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏
echo "üöÄ –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ (PostgreSQL + Redis)..."
docker-compose -f docker-compose.dev.yml up -d postgres redis
sleep 10

# –ó–∞–ø—É—Å–∫–∞—î–º–æ Backend –ª–æ–∫–∞–ª—å–Ω–æ –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ –∑–º—ñ–Ω–Ω–∏–º–∏
echo "üêç –ó–∞–ø—É—Å–∫ Backend –ª–æ–∫–∞–ª—å–Ω–æ..."
cd /Users/anton/Desktop/nany/nanny-match-backend
source venv/bin/activate
export DATABASE_URL="postgresql://app:app@localhost:5432/nanny_match"
export ENVIRONMENT="development"
export OTP_DEV_MODE="true"
python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload &
BACKEND_PID=$!
sleep 8

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—è
echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
docker ps | grep nanny-match

# –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ backend –±—É–¥–µ –≥–æ—Ç–æ–≤–∏–π
echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ backend..."
for i in {1..30}; do
    if curl -s http://localhost:8000/health > /dev/null 2>&1; then
        echo "‚úÖ Backend –≥–æ—Ç–æ–≤–∏–π!"
        break
    fi
    echo "   –°–ø—Ä–æ–±–∞ $i/30..."
    sleep 2
done

# –ó–∞–ø—É—Å–∫–∞—î–º–æ frontend
echo "üåê –ó–∞–ø—É—Å–∫ Frontend..."
cd ../nanny-match-ukraine
npm run dev:local &
FRONTEND_PID=$!
sleep 5

echo ""
echo "üéâ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!"
echo "   Backend:  http://localhost:8000"
echo "   Frontend: http://localhost:8080"
echo "   API Docs: http://localhost:8000/docs"
echo ""
echo "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –∑—É–ø–∏–Ω–∫–∏"

# Function to cleanup on exit
cleanup() {
    echo ""
    echo "üßπ –ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
    kill $BACKEND_PID 2>/dev/null || true
    kill $FRONTEND_PID 2>/dev/null || true
    cd /Users/anton/Desktop/nany/nanny-match-backend
    docker-compose -f docker-compose.dev.yml down
    echo "‚úÖ –í—Å—ñ —Å–µ—Ä–≤—ñ—Å–∏ –∑—É–ø–∏–Ω–µ–Ω—ñ"
    exit 0
}

trap cleanup SIGINT SIGTERM

# –û—á—ñ–∫—É—î–º–æ
wait $FRONTEND_PID