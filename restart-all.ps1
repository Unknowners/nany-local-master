# üöÄ Nanny Match Smart Restart –¥–ª—è Windows PowerShell

param(
    [string]$BackendType = ""
)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–¥—É–≤–∞–Ω–Ω—è –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–º–æ–¥–∑—ñ
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8

Write-Host ""
Write-Host "=========================================" -ForegroundColor Cyan
Write-Host "   üöÄ Nanny Match Smart Restart (PowerShell)" -ForegroundColor Cyan  
Write-Host "=========================================" -ForegroundColor Cyan

Write-Host "üßπ –ó—É–ø–∏–Ω–∫–∞ –≤—Å—ñ—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤..." -ForegroundColor Yellow

# –í–±–∏—Ç–∏ –≤—Å—ñ Node.js –ø—Ä–æ—Ü–µ—Å–∏
try {
    Get-Process -Name "node" -ErrorAction SilentlyContinue | Stop-Process -Force -ErrorAction SilentlyContinue
    
    # –í–±–∏—Ç–∏ –ø—Ä–æ—Ü–µ—Å–∏ –Ω–∞ –ø–æ—Ä—Ç–∞—Ö 8080 —Ç–∞ 8081
    $port8080 = Get-NetTCPConnection -LocalPort 8080 -ErrorAction SilentlyContinue
    if ($port8080) {
        Stop-Process -Id $port8080.OwningProcess -Force -ErrorAction SilentlyContinue
    }
    
    $port8081 = Get-NetTCPConnection -LocalPort 8081 -ErrorAction SilentlyContinue  
    if ($port8081) {
        Stop-Process -Id $port8081.OwningProcess -Force -ErrorAction SilentlyContinue
    }
} catch {
    # –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏
}

Write-Host "‚úÖ –í—Å—ñ –ø—Ä–æ—Ü–µ—Å–∏ –∑—É–ø–∏–Ω–µ–Ω—ñ" -ForegroundColor Green
Write-Host ""

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Node.js
Write-Host "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..." -ForegroundColor Blue
try {
    $nodeVersion = node --version 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Node.js –∑–Ω–∞–π–¥–µ–Ω–æ: $nodeVersion" -ForegroundColor Green
    } else {
        throw "Node.js –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    }
} catch {
    Write-Host "‚ùå Node.js –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!" -ForegroundColor Red
    Write-Host "üì• –ó–∞–≤–∞–Ω—Ç–∞–∂ Node.js –∑ https://nodejs.org/" -ForegroundColor Yellow
    Read-Host "–ù–∞—Ç–∏—Å–Ω–∏ Enter –¥–ª—è –≤–∏—Ö–æ–¥—É"
    exit 1
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø—Ä–æ–µ–∫—Ç—É
if (!(Test-Path "nanny-match-ukraine")) {
    Write-Host "‚ùå –ü–∞–ø–∫–∞ nanny-match-ukraine –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!" -ForegroundColor Red
    Write-Host "üìÅ –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è —â–æ —Ç–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π –ø–∞–ø—Ü—ñ –ø—Ä–æ–µ–∫—Ç—É" -ForegroundColor Yellow
    Read-Host "–ù–∞—Ç–∏—Å–Ω–∏ Enter –¥–ª—è –≤–∏—Ö–æ–¥—É"
    exit 1
}

if (!(Test-Path "nanny-match-ukraine-adminfront")) {
    Write-Host "‚ùå –ü–∞–ø–∫–∞ nanny-match-ukraine-adminfront –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!" -ForegroundColor Red
    Write-Host "üìÅ –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è —â–æ —Ç–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π –ø–∞–ø—Ü—ñ –ø—Ä–æ–µ–∫—Ç—É" -ForegroundColor Yellow
    Read-Host "–ù–∞—Ç–∏—Å–Ω–∏ Enter –¥–ª—è –≤–∏—Ö–æ–¥—É"
    exit 1
}

Write-Host "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç—É –ø—Ä–∞–≤–∏–ª—å–Ω–∞" -ForegroundColor Green
Write-Host ""

# –í–∏–±—ñ—Ä —Ç–∏–ø—É backend
if ($BackendType -eq "") {
    Write-Host "ü§î –û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø backend:" -ForegroundColor Magenta
    Write-Host "   1) –õ–æ–∫–∞–ª—å–Ω–∏–π (Docker) - –ø–æ–≤–Ω–∞ —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–∞ –≤–∞—à–æ–º—É –∫–æ–º–ø'—é—Ç–µ—Ä—ñ"
    Write-Host "   2) –•–º–∞—Ä–Ω–∏–π (https://nany.datavertex.me/) - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤—ñ–¥–¥–∞–ª–µ–Ω–∏–π —Å–µ—Ä–≤–µ—Ä"
    Write-Host ""
    
    $BackendType = Read-Host "–í–∞—à –≤–∏–±—ñ—Ä (1 –∞–±–æ 2)"
}

$backendUrl = ""

if ($BackendType -eq "2") {
    Write-Host ""
    Write-Host "üåê –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ö–º–∞—Ä–Ω–æ–≥–æ backend..." -ForegroundColor Cyan
    try {
        $response = Invoke-WebRequest -Uri "https://nany.datavertex.me/health" -TimeoutSec 10 -ErrorAction Stop
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ –•–º–∞—Ä–Ω–∏–π backend –¥–æ—Å—Ç—É–ø–Ω–∏–π: https://nany.datavertex.me/" -ForegroundColor Green
            $backendUrl = "https://nany.datavertex.me"
        } else {
            throw "Backend –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π"
        }
    } catch {
        Write-Host "‚ö†Ô∏è  –•–º–∞—Ä–Ω–∏–π backend –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π" -ForegroundColor Yellow
        $BackendType = "1"
        $backendUrl = "http://localhost:8000"
    }
} elseif ($BackendType -eq "1") {
    Write-Host ""
    Write-Host "üê≥ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ backend..." -ForegroundColor Cyan
    Write-Host "‚ö†Ô∏è  –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è —â–æ Docker –∑–∞–ø—É—â–µ–Ω–æ —ñ backend –ø—Ä–∞—Ü—é—î –Ω–∞ http://localhost:8000" -ForegroundColor Yellow
    $backendUrl = "http://localhost:8000"
} else {
    Write-Host "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ö–º–∞—Ä–Ω–∏–π backend" -ForegroundColor Red
    $backendUrl = "https://nany.datavertex.me"
}

Write-Host ""
Write-Host "üöÄ –ó–∞–ø—É—Å–∫ frontend –¥–æ–¥–∞—Ç–∫—ñ–≤..." -ForegroundColor Blue

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É frontend
function Start-Frontend {
    param(
        [string]$FolderName,
        [int]$Port,
        [string]$DisplayName,
        [string]$BackendUrl
    )
    
    Write-Host ""
    Write-Host "üöÄ –ó–∞–ø—É—Å–∫ $DisplayName..." -ForegroundColor Cyan
    
    if (!(Test-Path $FolderName)) {
        Write-Host "‚ùå –ü–∞–ø–∫–∞ $FolderName –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!" -ForegroundColor Red
        return $false
    }
    
    Set-Location $FolderName
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ package.json
    if (!(Test-Path "package.json")) {
        Write-Host "‚ùå package.json –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ $FolderName!" -ForegroundColor Red
        Set-Location ".."
        return $false
    }
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    if (!(Test-Path "node_modules")) {
        Write-Host "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è $FolderName..." -ForegroundColor Yellow
        npm install
        if ($LASTEXITCODE -ne 0) {
            Write-Host "‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è $FolderName!" -ForegroundColor Red
            Set-Location ".."
            return $false
        }
    }
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è/–æ–Ω–æ–≤–ª–µ–Ω–Ω—è .env —Ñ–∞–π–ª—É
    @"
VITE_API_URL=$BackendUrl
VITE_BACKEND_URL=$BackendUrl
"@ | Out-File -FilePath ".env" -Encoding UTF8
    
    # –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω—ñ
    Write-Host "‚úÖ –ó–∞–ø—É—Å–∫ $DisplayName –Ω–∞ –ø–æ—Ä—Ç—É $Port..." -ForegroundColor Green
    Start-Process -FilePath "cmd" -ArgumentList "/c", "npm run dev" -WindowStyle Minimized
    
    # –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É
    Write-Host "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É $DisplayName..." -ForegroundColor Yellow
    Start-Sleep -Seconds 3
    
    # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –≥–æ–ª–æ–≤–Ω—É –ø–∞–ø–∫—É
    Set-Location ".."
    
    Write-Host "‚úÖ $DisplayName –∑–∞–ø—É—â–µ–Ω–æ!" -ForegroundColor Green
    return $true
}

# –ó–∞–ø—É—Å–∫ –æ–±–æ—Ö frontend –¥–æ–¥–∞—Ç–∫—ñ–≤
$userSuccess = Start-Frontend -FolderName "nanny-match-ukraine" -Port 8080 -DisplayName "üë• User Frontend" -BackendUrl $backendUrl
$adminSuccess = Start-Frontend -FolderName "nanny-match-ukraine-adminfront" -Port 8081 -DisplayName "üë®‚Äçüíº Admin Frontend" -BackendUrl $backendUrl

Write-Host ""
Write-Host "üéâ –í—Å–µ –≥–æ—Ç–æ–≤–æ!" -ForegroundColor Green
Write-Host ""
Write-Host "üì± –ü–æ—Å–∏–ª–∞–Ω–Ω—è:" -ForegroundColor Cyan
Write-Host "   üåê Backend:      $backendUrl"
Write-Host "   üë• User Frontend: http://localhost:8080"
Write-Host "   üë®‚Äçüíº Admin Frontend: http://localhost:8081"
Write-Host ""
Write-Host "‚èπÔ∏è  –©–æ–± –∑—É–ø–∏–Ω–∏—Ç–∏ - –Ω–∞—Ç–∏—Å–Ω–∏ Ctrl+C" -ForegroundColor Yellow
Write-Host ""

# –ß–µ–∫–∞—Ç–∏ –ø–æ–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –Ω–∞—Ç–∏—Å–Ω–µ Ctrl+C
try {
    while ($true) {
        Start-Sleep -Seconds 5
    }
} catch [System.OperationCanceledException] {
    Write-Host "üëã –ó—É–ø–∏–Ω–∫–∞..." -ForegroundColor Yellow
}
